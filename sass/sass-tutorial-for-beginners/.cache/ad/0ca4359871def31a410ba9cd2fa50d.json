{"id":"dist/css/main.css","dependencies":[{"name":"C:\\Users\\aaren\\programming_projects\\vscode_projects\\web-dev-basics\\freeCodeCamp\\sass-tutorial-for-beginners\\dist\\css\\main.css.map","includedInParent":true,"mtime":1677999581136},{"name":"C:\\Users\\aaren\\programming_projects\\vscode_projects\\web-dev-basics\\freeCodeCamp\\sass-tutorial-for-beginners\\dist\\css\\main.css","includedInParent":true,"mtime":1677999581136},{"name":"C:\\Users\\aaren\\programming_projects\\vscode_projects\\web-dev-basics\\freeCodeCamp\\sass-tutorial-for-beginners\\scss\\_resets.scss","includedInParent":true,"mtime":1677996093188},{"name":"C:\\Users\\aaren\\programming_projects\\vscode_projects\\web-dev-basics\\freeCodeCamp\\sass-tutorial-for-beginners\\scss\\main.scss","includedInParent":true,"mtime":1678046550632},{"name":"C:\\Users\\aaren\\programming_projects\\vscode_projects\\web-dev-basics\\freeCodeCamp\\sass-tutorial-for-beginners\\scss\\_variables.scss","includedInParent":true,"mtime":1677997577146},{"name":"_css_loader","parent":"C:\\Users\\aaren\\programming_projects\\vscode_projects\\web-dev-basics\\freeCodeCamp\\sass-tutorial-for-beginners\\dist\\css\\main.css","resolved":"C:\\Users\\aaren\\programming_projects\\vscode_projects\\web-dev-basics\\freeCodeCamp\\sass-tutorial-for-beginners\\node_modules\\parcel-bundler\\src\\builtins\\css-loader.js"},{"name":"C:\\Users\\aaren\\programming_projects\\vscode_projects\\web-dev-basics\\freeCodeCamp\\sass-tutorial-for-beginners\\package.json","includedInParent":true,"mtime":1678047103932}],"generated":{"css":"/* Course: https://www.youtube.com/watch?v=_a5j7KoflTs */\n/* SCSS PARTIAL (FILES): Contain little snippets of css that you can include in other sass files (modularize your CSS and make it easier to maintain!) */\n/* simply put underscore (_) at front to declare scss file as a partial: tells compiler to ignore this file (i.e., not generate .css file for it) */\n/* generally speaking, put imports at top of file; don't need underscore (_) or extension (.scss)! */\n/* Reset margin and padding like super simple dev did for the parent class! This file accomplishes only that */\n/* CSS Vendor prefixes (way for browsers to give access to new css features that're not yet stable) should be auto-added to compieled .css, but they aren't right now?? */\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n} /* alt-shift-down arrow to duplicate line on next line */\n/* WITH SCSS: scss variables are 100% browser compatible since compiler turns it into VALUES, not CSS  */\n/* You can create map (key-value pairs) of font weights, colours, ... */\n/* don't forget semicolon */\n/* Don't modify the CSS file! */\n/* Variables: CSS has them now, but SCSS had it waaay before; CSS variable browser compatibility is 90% */\n/* WITH CSS */\n/* :root targets the highest-level \"parent\" element in DOM */\n/*\n:root { \n  --primary-colour: #272727;\n  --accent-colour: #ff652f;\n  --text-colour: #fff; \n}\n*/\n/* MIXINS: Similar to functions, reusable chunk of code; should be used to define styles */\n/* default value \"true\" for parameter \"$light-theme */\n/* mixinizing CSS media queries (allows content rendering to adapt to different conditions, e.g., screen res) */\n/* FUNCTIONS! Should be used to compute and return values */\nbody {\n  /* lets you combine multiple \"background\"-related properties onto one line (e.g., \"background: #fff url(\"image_tree.png\") no-repeat right top;\") */\n  background: #272727;\n  color: #fff;\n}\n\n/* NESTING */\n/* Be careful with too much nesting; uses reusable classes as well */\n.main {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: row;\n  /* in CSS, you would have to do calc(80% - 40%); in CSS you can do calc(80% - 400px) but in SCSS you can't do 80% - 400px (can't mix units) */\n  width: 40%;\n  /* top and bot to 0, left and right to auto */\n  margin: 0 auto;\n  /* interpolation (.main): we don't just want .main__paragraph, we want everything before it (i.e., \"width: 80%\", \"margin: 0 auto\")*/\n  /* instead of .main__paragraph (& = .main, i.e., parent class selector) */\n  /* EXTENDing styles from main__paragraph1 to main__paragraph2 to avoid copy-paste code! */\n  /* what do we want site to do when viewport width <800px (i.e., mobile user)? */\n}\n.main .main__paragraph1, .main .main__paragraph2 {\n  font-weight: 700;\n}\n.main .main__paragraph1:hover, .main .main__paragraph2:hover {\n  color: pink;\n}\n.main .main__paragraph2:hover {\n  color: #ff652f;\n}\n@media (max-width: 800px) {\n  .main {\n    flex-direction: column;\n  }\n}\n\n.light {\n  /* don't need to say \"$light-theme\" */\n  /* if $light-theme is true */\n  /* lighten() (built-in sass function) at 100% inverts the colour entirely */\n  background: white;\n  color: black;\n}","js":"var reloadCSS = require('_css_loader');\nmodule.hot.dispose(reloadCSS);\nmodule.hot.accept(reloadCSS);"},"sourceMaps":{"css":{"mappings":[{"source":"scss\\main.scss","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"scss\\main.scss","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":56}},{"source":"scss\\main.scss","name":null,"original":{"line":3,"column":0},"generated":{"line":2,"column":0}},{"source":"scss\\main.scss","name":null,"original":{"line":3,"column":0},"generated":{"line":2,"column":152}},{"source":"scss\\main.scss","name":null,"original":{"line":4,"column":0},"generated":{"line":3,"column":0}},{"source":"scss\\main.scss","name":null,"original":{"line":4,"column":0},"generated":{"line":3,"column":147}},{"source":"scss\\main.scss","name":null,"original":{"line":5,"column":0},"generated":{"line":4,"column":0}},{"source":"scss\\main.scss","name":null,"original":{"line":5,"column":0},"generated":{"line":4,"column":100}},{"source":"scss\\_resets.scss","name":null,"original":{"line":1,"column":0},"generated":{"line":5,"column":0}},{"source":"scss\\_resets.scss","name":null,"original":{"line":1,"column":0},"generated":{"line":5,"column":110}},{"source":"scss\\_resets.scss","name":null,"original":{"line":2,"column":0},"generated":{"line":6,"column":0}},{"source":"scss\\_resets.scss","name":null,"original":{"line":2,"column":0},"generated":{"line":6,"column":169}},{"source":"scss\\_resets.scss","name":null,"original":{"line":3,"column":0},"generated":{"line":7,"column":0}},{"source":"scss\\_resets.scss","name":null,"original":{"line":4,"column":2},"generated":{"line":8,"column":2}},{"source":"scss\\_resets.scss","name":null,"original":{"line":4,"column":2},"generated":{"line":8,"column":24}},{"source":"scss\\_resets.scss","name":null,"original":{"line":5,"column":2},"generated":{"line":9,"column":2}},{"source":"scss\\_resets.scss","name":null,"original":{"line":5,"column":2},"generated":{"line":9,"column":11}},{"source":"scss\\_resets.scss","name":null,"original":{"line":6,"column":2},"generated":{"line":10,"column":2}},{"source":"scss\\_resets.scss","name":null,"original":{"line":6,"column":2},"generated":{"line":10,"column":12}},{"source":"dist\\css\\main.css","name":null,"original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"scss\\main.scss","name":null,"original":{"line":7,"column":0},"generated":{"line":11,"column":2}},{"source":"scss\\main.scss","name":null,"original":{"line":7,"column":0},"generated":{"line":11,"column":58}},{"source":"scss\\_variables.scss","name":null,"original":{"line":1,"column":0},"generated":{"line":12,"column":0}},{"source":"scss\\_variables.scss","name":null,"original":{"line":1,"column":0},"generated":{"line":12,"column":104}},{"source":"scss\\_variables.scss","name":null,"original":{"line":6,"column":0},"generated":{"line":13,"column":0}},{"source":"scss\\_variables.scss","name":null,"original":{"line":6,"column":0},"generated":{"line":13,"column":71}},{"source":"scss\\_variables.scss","name":null,"original":{"line":11,"column":3},"generated":{"line":14,"column":0}},{"source":"scss\\_variables.scss","name":null,"original":{"line":11,"column":3},"generated":{"line":14,"column":27}},{"source":"scss\\main.scss","name":null,"original":{"line":10,"column":0},"generated":{"line":15,"column":0}},{"source":"scss\\main.scss","name":null,"original":{"line":10,"column":0},"generated":{"line":15,"column":31}},{"source":"scss\\main.scss","name":null,"original":{"line":12,"column":0},"generated":{"line":16,"column":0}},{"source":"scss\\main.scss","name":null,"original":{"line":12,"column":0},"generated":{"line":16,"column":105}},{"source":"scss\\main.scss","name":null,"original":{"line":14,"column":0},"generated":{"line":17,"column":0}},{"source":"scss\\main.scss","name":null,"original":{"line":14,"column":0},"generated":{"line":17,"column":13}},{"source":"scss\\main.scss","name":null,"original":{"line":15,"column":0},"generated":{"line":18,"column":0}},{"source":"scss\\main.scss","name":null,"original":{"line":15,"column":0},"generated":{"line":18,"column":60}},{"source":"scss\\main.scss","name":null,"original":{"line":16,"column":0},"generated":{"line":19,"column":0}},{"source":"scss\\main.scss","name":null,"original":{"line":16,"column":0},"generated":{"line":25,"column":1}},{"source":"scss\\main.scss","name":null,"original":{"line":24,"column":0},"generated":{"line":26,"column":0}},{"source":"scss\\main.scss","name":null,"original":{"line":24,"column":0},"generated":{"line":26,"column":90}},{"source":"scss\\main.scss","name":null,"original":{"line":32,"column":0},"generated":{"line":27,"column":0}},{"source":"scss\\main.scss","name":null,"original":{"line":32,"column":0},"generated":{"line":27,"column":53}},{"source":"scss\\main.scss","name":null,"original":{"line":43,"column":0},"generated":{"line":28,"column":0}},{"source":"scss\\main.scss","name":null,"original":{"line":43,"column":0},"generated":{"line":28,"column":111}},{"source":"scss\\main.scss","name":null,"original":{"line":50,"column":0},"generated":{"line":29,"column":0}},{"source":"scss\\main.scss","name":null,"original":{"line":50,"column":0},"generated":{"line":29,"column":59}},{"source":"scss\\main.scss","name":null,"original":{"line":56,"column":0},"generated":{"line":30,"column":0}},{"source":"scss\\main.scss","name":null,"original":{"line":57,"column":2},"generated":{"line":31,"column":2}},{"source":"scss\\main.scss","name":null,"original":{"line":57,"column":2},"generated":{"line":31,"column":148}},{"source":"scss\\main.scss","name":null,"original":{"line":58,"column":2},"generated":{"line":32,"column":2}},{"source":"scss\\_variables.scss","name":null,"original":{"line":2,"column":17},"generated":{"line":32,"column":21}},{"source":"scss\\main.scss","name":null,"original":{"line":59,"column":2},"generated":{"line":33,"column":2}},{"source":"scss\\_variables.scss","name":null,"original":{"line":4,"column":14},"generated":{"line":33,"column":13}},{"source":"dist\\css\\main.css","name":null,"original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"scss\\main.scss","name":null,"original":{"line":62,"column":0},"generated":{"line":36,"column":0}},{"source":"scss\\main.scss","name":null,"original":{"line":62,"column":0},"generated":{"line":36,"column":12}},{"source":"scss\\main.scss","name":null,"original":{"line":63,"column":0},"generated":{"line":37,"column":0}},{"source":"scss\\main.scss","name":null,"original":{"line":63,"column":0},"generated":{"line":37,"column":68}},{"source":"scss\\main.scss","name":null,"original":{"line":65,"column":0},"generated":{"line":38,"column":0}},{"source":"scss\\main.scss","name":null,"original":{"line":26,"column":2},"generated":{"line":39,"column":2}},{"source":"scss\\main.scss","name":null,"original":{"line":26,"column":2},"generated":{"line":39,"column":15}},{"source":"scss\\main.scss","name":null,"original":{"line":27,"column":2},"generated":{"line":40,"column":2}},{"source":"scss\\main.scss","name":null,"original":{"line":27,"column":2},"generated":{"line":40,"column":25}},{"source":"scss\\main.scss","name":null,"original":{"line":28,"column":2},"generated":{"line":41,"column":2}},{"source":"scss\\main.scss","name":null,"original":{"line":28,"column":2},"generated":{"line":41,"column":21}},{"source":"scss\\main.scss","name":null,"original":{"line":29,"column":2},"generated":{"line":42,"column":2}},{"source":"scss\\main.scss","name":null,"original":{"line":66,"column":22},"generated":{"line":42,"column":21}},{"source":"scss\\main.scss","name":null,"original":{"line":67,"column":2},"generated":{"line":43,"column":2}},{"source":"scss\\main.scss","name":null,"original":{"line":67,"column":2},"generated":{"line":43,"column":143}},{"source":"scss\\main.scss","name":null,"original":{"line":68,"column":2},"generated":{"line":44,"column":2}},{"source":"scss\\main.scss","name":null,"original":{"line":68,"column":2},"generated":{"line":44,"column":12}},{"source":"scss\\main.scss","name":null,"original":{"line":69,"column":2},"generated":{"line":45,"column":2}},{"source":"scss\\main.scss","name":null,"original":{"line":69,"column":2},"generated":{"line":45,"column":47}},{"source":"scss\\main.scss","name":null,"original":{"line":70,"column":2},"generated":{"line":46,"column":2}},{"source":"scss\\main.scss","name":null,"original":{"line":70,"column":2},"generated":{"line":46,"column":16}},{"source":"scss\\main.scss","name":null,"original":{"line":71,"column":2},"generated":{"line":47,"column":2}},{"source":"scss\\main.scss","name":null,"original":{"line":71,"column":2},"generated":{"line":47,"column":133}},{"source":"scss\\main.scss","name":null,"original":{"line":72,"column":2},"generated":{"line":48,"column":2}},{"source":"scss\\main.scss","name":null,"original":{"line":72,"column":2},"generated":{"line":48,"column":75}},{"source":"scss\\main.scss","name":null,"original":{"line":80,"column":2},"generated":{"line":49,"column":2}},{"source":"scss\\main.scss","name":null,"original":{"line":80,"column":2},"generated":{"line":49,"column":91}},{"source":"scss\\main.scss","name":null,"original":{"line":88,"column":2},"generated":{"line":50,"column":2}},{"source":"scss\\main.scss","name":null,"original":{"line":88,"column":2},"generated":{"line":50,"column":81}},{"source":"dist\\css\\main.css","name":null,"original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"scss\\main.scss","name":null,"original":{"line":73,"column":2},"generated":{"line":52,"column":0}},{"source":"scss\\main.scss","name":null,"original":{"line":74,"column":4},"generated":{"line":53,"column":2}},{"source":"scss\\main.scss","name":null,"original":{"line":74,"column":4},"generated":{"line":53,"column":18}},{"source":"dist\\css\\main.css","name":null,"original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"scss\\main.scss","name":null,"original":{"line":75,"column":4},"generated":{"line":55,"column":0}},{"source":"scss\\main.scss","name":null,"original":{"line":76,"column":6},"generated":{"line":56,"column":2}},{"source":"scss\\main.scss","name":null,"original":{"line":76,"column":6},"generated":{"line":56,"column":13}},{"source":"dist\\css\\main.css","name":null,"original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"scss\\main.scss","name":null,"original":{"line":83,"column":4},"generated":{"line":58,"column":0}},{"source":"scss\\main.scss","name":null,"original":{"line":84,"column":6},"generated":{"line":59,"column":2}},{"source":"scss\\_variables.scss","name":null,"original":{"line":3,"column":16},"generated":{"line":59,"column":16}},{"source":"dist\\css\\main.css","name":null,"original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"scss\\main.scss","name":null,"original":{"line":45,"column":2},"generated":{"line":61,"column":0}},{"source":"scss\\main.scss","name":null,"original":{"line":65,"column":0},"generated":{"line":62,"column":2}},{"source":"scss\\main.scss","name":null,"original":{"line":90,"column":4},"generated":{"line":63,"column":4}},{"source":"scss\\main.scss","name":null,"original":{"line":90,"column":4},"generated":{"line":63,"column":26}},{"source":"dist\\css\\main.css","name":null,"original":{"line":64,"column":2},"generated":{"line":64,"column":2}},{"source":"dist\\css\\main.css","name":null,"original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"scss\\main.scss","name":null,"original":{"line":94,"column":0},"generated":{"line":67,"column":0}},{"source":"scss\\main.scss","name":null,"original":{"line":95,"column":2},"generated":{"line":68,"column":2}},{"source":"scss\\main.scss","name":null,"original":{"line":95,"column":2},"generated":{"line":68,"column":39}},{"source":"scss\\main.scss","name":null,"original":{"line":34,"column":2},"generated":{"line":69,"column":2}},{"source":"scss\\main.scss","name":null,"original":{"line":34,"column":2},"generated":{"line":69,"column":30}},{"source":"scss\\main.scss","name":null,"original":{"line":36,"column":4},"generated":{"line":70,"column":2}},{"source":"scss\\main.scss","name":null,"original":{"line":36,"column":4},"generated":{"line":70,"column":77}},{"source":"scss\\main.scss","name":null,"original":{"line":37,"column":4},"generated":{"line":71,"column":2}},{"source":"scss\\main.scss","name":null,"original":{"line":37,"column":4},"generated":{"line":71,"column":19}},{"source":"scss\\main.scss","name":null,"original":{"line":38,"column":4},"generated":{"line":72,"column":2}},{"source":"scss\\main.scss","name":null,"original":{"line":38,"column":4},"generated":{"line":72,"column":14}},{"source":"dist\\css\\main.css","name":null,"original":{"line":73,"column":0},"generated":{"line":73,"column":0}}],"sources":{"scss\\main.scss":"/* Course: https://www.youtube.com/watch?v=_a5j7KoflTs */\r\n\r\n/* SCSS PARTIAL (FILES): Contain little snippets of css that you can include in other sass files (modularize your CSS and make it easier to maintain!) */\r\n/* simply put underscore (_) at front to declare scss file as a partial: tells compiler to ignore this file (i.e., not generate .css file for it) */\r\n/* generally speaking, put imports at top of file; don't need underscore (_) or extension (.scss)! */\r\n// @import \"./resets\", \"./variables\";\r\n\r\n// HOWEVER, @import is outdated now, and @use is preferred! It's namespaced (provide scope, locally to the file) to avoid overwriting\r\n@use \".resets\";\r\n@use \"./variables\";\r\n\r\n/* Don't modify the CSS file! */\r\n/* alt-shift-down arrow to duplicate line on next line */\r\n\r\n/* Variables: CSS has them now, but SCSS had it waaay before; CSS variable browser compatibility is 90% */\r\n\r\n/* WITH CSS */\r\n/* :root targets the highest-level \"parent\" element in DOM */\r\n/*\r\n:root { \r\n  --primary-colour: #272727;\r\n  --accent-colour: #ff652f;\r\n  --text-colour: #fff; \r\n}\r\n*/\r\n\r\n/* MIXINS: Similar to functions, reusable chunk of code; should be used to define styles */\r\n@mixin flexCenter($direction) {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: $direction;\r\n}\r\n\r\n/* default value \"true\" for parameter \"$light-theme */\r\n@mixin theme($light-theme: true) {\r\n  /* if $light-theme is true */\r\n  @if $light-theme {\r\n    /* lighten() (built-in sass function) at 100% inverts the colour entirely */\r\n    background: lighten($primary-colour, 100%);\r\n    color: darken($text-colour, 100%);\r\n  } @else {\r\n  }\r\n}\r\n\r\n/* mixinizing CSS media queries (allows content rendering to adapt to different conditions, e.g., screen res) */\r\n@mixin mobile {\r\n  @media (max-width: $mobile-width) {\r\n    @content;\r\n  }\r\n}\r\n\r\n/* FUNCTIONS! Should be used to compute and return values */\r\n@function weight($weight-name) {\r\n  /* map-get (built-in sass function) searches for key (\"$weight-name\" parameter), returns value (\"$font-weights\" in _variables.scss) */\r\n  @return map-get($font-weights, $weight-name);\r\n}\r\n\r\nbody {\r\n  /* lets you combine multiple \"background\"-related properties onto one line (e.g., \"background: #fff url(\"image_tree.png\") no-repeat right top;\") */\r\n  background: $primary-colour;\r\n  color: $text-colour;\r\n}\r\n\r\n/* NESTING */\r\n/* Be careful with too much nesting; uses reusable classes as well */\r\n\r\n.main {\r\n  @include flexCenter(row);\r\n  /* in CSS, you would have to do calc(80% - 40%); in CSS you can do calc(80% - 400px) but in SCSS you can't do 80% - 400px (can't mix units) */\r\n  width: 80% - 40%;\r\n  /* top and bot to 0, left and right to auto */\r\n  margin: 0 auto;\r\n  /* interpolation (#{&}): we don't just want .main__paragraph, we want everything before it (i.e., \"width: 80%\", \"margin: 0 auto\")*/\r\n  /* instead of .main__paragraph (& = .main, i.e., parent class selector) */\r\n  #{&}__paragraph1 {\r\n    font-weight: weight(bold);\r\n    &:hover {\r\n      color: pink;\r\n    }\r\n  }\r\n\r\n  /* EXTENDing styles from main__paragraph1 to main__paragraph2 to avoid copy-paste code! */\r\n  #{&}__paragraph2 {\r\n    @extend .main__paragraph1;\r\n    &:hover {\r\n      color: $accent-colour;\r\n    }\r\n  }\r\n\r\n  /* what do we want site to do when viewport width <800px (i.e., mobile user)? */\r\n  @include mobile {\r\n    flex-direction: column;\r\n  }\r\n}\r\n\r\n.light {\r\n  /* don't need to say \"$light-theme\" */\r\n  @include theme($light-theme: true);\r\n}\r\n","scss\\_resets.scss":"/* Reset margin and padding like super simple dev did for the parent class! This file accomplishes only that */\r\n/* CSS Vendor prefixes (way for browsers to give access to new css features that're not yet stable) should be auto-added to compieled .css, but they aren't right now?? */\r\n* {\r\n  box-sizing: border-box;\r\n  margin: 0;\r\n  padding: 0; \r\n}","dist\\css\\main.css":"/* Course: https://www.youtube.com/watch?v=_a5j7KoflTs */\n/* SCSS PARTIAL (FILES): Contain little snippets of css that you can include in other sass files (modularize your CSS and make it easier to maintain!) */\n/* simply put underscore (_) at front to declare scss file as a partial: tells compiler to ignore this file (i.e., not generate .css file for it) */\n/* generally speaking, put imports at top of file; don't need underscore (_) or extension (.scss)! */\n/* Reset margin and padding like super simple dev did for the parent class! This file accomplishes only that */\n/* CSS Vendor prefixes (way for browsers to give access to new css features that're not yet stable) should be auto-added to compieled .css, but they aren't right now?? */\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n} /* alt-shift-down arrow to duplicate line on next line */\n/* WITH SCSS: scss variables are 100% browser compatible since compiler turns it into VALUES, not CSS  */\n/* You can create map (key-value pairs) of font weights, colours, ... */\n/* don't forget semicolon */\n/* Don't modify the CSS file! */\n/* Variables: CSS has them now, but SCSS had it waaay before; CSS variable browser compatibility is 90% */\n/* WITH CSS */\n/* :root targets the highest-level \"parent\" element in DOM */\n/*\n:root { \n  --primary-colour: #272727;\n  --accent-colour: #ff652f;\n  --text-colour: #fff; \n}\n*/\n/* MIXINS: Similar to functions, reusable chunk of code; should be used to define styles */\n/* default value \"true\" for parameter \"$light-theme */\n/* mixinizing CSS media queries (allows content rendering to adapt to different conditions, e.g., screen res) */\n/* FUNCTIONS! Should be used to compute and return values */\nbody {\n  /* lets you combine multiple \"background\"-related properties onto one line (e.g., \"background: #fff url(\"image_tree.png\") no-repeat right top;\") */\n  background: #272727;\n  color: #fff;\n}\n\n/* NESTING */\n/* Be careful with too much nesting; uses reusable classes as well */\n.main {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: row;\n  /* in CSS, you would have to do calc(80% - 40%); in CSS you can do calc(80% - 400px) but in SCSS you can't do 80% - 400px (can't mix units) */\n  width: 40%;\n  /* top and bot to 0, left and right to auto */\n  margin: 0 auto;\n  /* interpolation (.main): we don't just want .main__paragraph, we want everything before it (i.e., \"width: 80%\", \"margin: 0 auto\")*/\n  /* instead of .main__paragraph (& = .main, i.e., parent class selector) */\n  /* EXTENDing styles from main__paragraph1 to main__paragraph2 to avoid copy-paste code! */\n  /* what do we want site to do when viewport width <800px (i.e., mobile user)? */\n}\n.main .main__paragraph1, .main .main__paragraph2 {\n  font-weight: 700;\n}\n.main .main__paragraph1:hover, .main .main__paragraph2:hover {\n  color: pink;\n}\n.main .main__paragraph2:hover {\n  color: #ff652f;\n}\n@media (max-width: 800px) {\n  .main {\n    flex-direction: column;\n  }\n}\n\n.light {\n  /* don't need to say \"$light-theme\" */\n  /* if $light-theme is true */\n  /* lighten() (built-in sass function) at 100% inverts the colour entirely */\n  background: white;\n  color: black;\n}/*# sourceMappingURL=main.css.map */","scss\\_variables.scss":"/* WITH SCSS: scss variables are 100% browser compatible since compiler turns it into VALUES, not CSS  */\r\n$primary-colour: #272727;\r\n$accent-colour: #ff652f;\r\n$text-colour: #fff;\r\n\r\n/* You can create map (key-value pairs) of font weights, colours, ... */\r\n$font-weights: (\r\n  \"regular\": 400,\r\n  \"medium\": 500,\r\n  \"bold\": 700,\r\n); /* don't forget semicolon */\r\n\r\n$mobile-width: 800px; \r\n"},"lineCount":null}},"error":null,"hash":"125ede4ae472c03a757f897553e1861b","cacheData":{"env":{}}}